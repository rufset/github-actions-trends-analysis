# This workflow builds the release, triggered by our engineering process automation cluster. It creates the release based on the
# given input.
#
name: Repo dispatch Release 8.2

on:
  repository_dispatch:
    types: [trigger_release_8_2]

jobs:
  run-release:
    name: "Release ${{ github.event.client_payload.releaseVersion }}"
    uses: camunda/zeebe/.github/workflows/zeebe-release.yml@stable/8.2
    secrets: inherit
    with:
      releaseVersion: ${{ github.event.client_payload.releaseVersion }}
      nextDevelopmentVersion: ${{ github.event.client_payload.nextDevelopmentVersion }}
      isLatest: ${{ github.event.client_payload.isLatest }}
      dryRun: ${{ github.event.client_payload.dryRun }}
  notify-if-failed:
    name: Send slack notification on failure
    runs-on: ubuntu-latest
    needs: [ run-release ]
    # if it's a dry run => no slack notification (remove noise in slack due to manual testing)
    # else => send slack notification as an actual release failed
    if: ${{ failure() && github.event.client_payload.dryRun == false }}
    steps:
      - id: slack-notify
        name: Send slack notification
        uses: slackapi/slack-github-action@v1.25.0
        with:
          # For posting a rich message using Block Kit
          payload: |
            {
              "text": ":alarm: Release job for ${{ github.event.client_payload.releaseVersion }} failed! :alarm:\n",
             	"blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":alarm: Release job for ${{ github.event.client_payload.releaseVersion }} failed! :alarm:\n"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Please check the related workflow execution: https://github.com/camunda/zeebe/actions/runs/${{ github.run_id }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
