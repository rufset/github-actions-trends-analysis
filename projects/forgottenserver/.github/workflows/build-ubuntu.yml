name: Build on Ubuntu

on:
  push:
    branches:
      - master
      - v*

    paths:
      - cmake/**
      - src/**
      - CMakeLists.txt
      - CMakePresets.json

  pull_request:
    paths:
      - cmake/**
      - src/**
      - CMakeLists.txt
      - CMakePresets.json

  workflow_dispatch:

jobs:
  build-ubuntu:
    name: ubuntu-${{ matrix.buildtype }}-luajit=${{ matrix.luajit }}
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      matrix:
        buildtype: [Debug, Release]
        luajit: [on, off]

    steps:
      - uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: cpp
          # For more details on CodeQL's query packs, refer to: https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
          queries: +security-extended,security-and-quality
        if: ${{ matrix.buildtype }} == "Debug"

      - name: Get latest CMake
        # Using 'latest' branch, the latest CMake is installed.
        uses: lukka/get-cmake@latest

      - name: Install dependencies
        run: >
          sudo apt update -q &&
          sudo apt install -yq build-essential libluajit-5.1-dev libmysqlclient-dev
          libboost-system-dev libboost-iostreams-dev libboost-locale-dev
          libpugixml-dev libcrypto++-dev libfmt-dev

      - name: Build with cmake
        uses: lukka/run-cmake@v10
        with:
          buildPreset: default
          buildPresetAdditionalArgs: "['--config ${{ matrix.buildtype }}']"
          configurePreset: default

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:cpp"
        if: ${{ matrix.buildtype }} == "Debug"

      - name: Upload artifact binary
        uses: actions/upload-artifact@v3
        with:
          name: ubuntu-tfs-amd64-${{ github.sha }}
          path: ${{ runner.workspace }}/build/tfs
