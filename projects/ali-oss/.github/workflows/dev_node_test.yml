# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Develop branch

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:
  browser_test:
    environment: ali_oss_AK
    runs-on: macos-latest

    env:
      ONCI: true
      MINIFY: 1
      ALI_SDK_OSS_ID: ${{secrets.ALI_SDK_OSS_ID}}
      ALI_SDK_OSS_REGION: ${{secrets.ALI_SDK_OSS_REGION}}
      ALI_SDK_OSS_SECRET: ${{secrets.ALI_SDK_OSS_SECRET}}
      ALI_SDK_STS_BUCKET: ${{secrets.ALI_SDK_STS_BUCKET}}
      ALI_SDK_STS_ID: ${{secrets.ALI_SDK_STS_ID}}
      ALI_SDK_STS_REGION: ${{secrets.ALI_SDK_STS_REGION}}
      ALI_SDK_STS_ROLE: ${{secrets.ALI_SDK_STS_ROLE}}
      ALI_SDK_STS_SECRET: ${{secrets.ALI_SDK_STS_SECRET}}

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
      - name: browser build and test
        run: |
          curl cip.cc
          npm install
          mkdir test/browser/build
          node browser-build.js > test/browser/build/aliyun-oss-sdk.min.js
          node task/browser-test-build.js > test/browser/build/tests.js
          npx karma start
  node_10:
    environment: ali_oss_AK
    runs-on: macos-latest

    env:
      ONCI: true
      ALI_SDK_OSS_ID: ${{secrets.ALI_SDK_OSS_ID}}
      ALI_SDK_OSS_SECRET: ${{secrets.ALI_SDK_OSS_SECRET}}
      ALI_SDK_OSS_REGION: ${{secrets.ALI_SDK_OSS_REGION}}
      ALI_SDK_STS_BUCKET: ${{secrets.ALI_SDK_STS_BUCKET}}
      ALI_SDK_STS_ID: ${{secrets.ALI_SDK_STS_ID}}
      ALI_SDK_STS_REGION: ${{secrets.ALI_SDK_STS_REGION}}
      ALI_SDK_STS_ROLE: ${{secrets.ALI_SDK_STS_ROLE}}
      ALI_SDK_STS_SECRET: ${{secrets.ALI_SDK_STS_SECRET}}

    strategy:
      matrix:
        node-version: [10.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm run test

  node_12:
    if: always()
    needs: [node_10]
    environment: ali_oss_AK
    runs-on: macos-latest

    env:
      ONCI: true
      ALI_SDK_OSS_ID: ${{secrets.ALI_SDK_OSS_ID}}
      ALI_SDK_OSS_SECRET: ${{secrets.ALI_SDK_OSS_SECRET}}
      ALI_SDK_OSS_REGION: ${{secrets.ALI_SDK_OSS_REGION}}
      ALI_SDK_STS_BUCKET: ${{secrets.ALI_SDK_STS_BUCKET}}
      ALI_SDK_STS_ID: ${{secrets.ALI_SDK_STS_ID}}
      ALI_SDK_STS_REGION: ${{secrets.ALI_SDK_STS_REGION}}
      ALI_SDK_STS_ROLE: ${{secrets.ALI_SDK_STS_ROLE}}
      ALI_SDK_STS_SECRET: ${{secrets.ALI_SDK_STS_SECRET}}

    strategy:
      matrix:
        node-version: [12.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm run test

  node_14:
    if: always()
    needs: [node_10, node_12]
    environment: ali_oss_AK
    runs-on: macos-latest

    env:
      ONCI: true
      ALI_SDK_OSS_ID: ${{secrets.ALI_SDK_OSS_ID}}
      ALI_SDK_OSS_SECRET: ${{secrets.ALI_SDK_OSS_SECRET}}
      ALI_SDK_OSS_REGION: ${{secrets.ALI_SDK_OSS_REGION}}
      ALI_SDK_STS_BUCKET: ${{secrets.ALI_SDK_STS_BUCKET}}
      ALI_SDK_STS_ID: ${{secrets.ALI_SDK_STS_ID}}
      ALI_SDK_STS_REGION: ${{secrets.ALI_SDK_STS_REGION}}
      ALI_SDK_STS_ROLE: ${{secrets.ALI_SDK_STS_ROLE}}
      ALI_SDK_STS_SECRET: ${{secrets.ALI_SDK_STS_SECRET}}

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v2
        with:
          ref: develop
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm run test
