name: Release CD

on:
  push:
    tags:
      - "v*"  # push to version tags trigger the build

jobs:
  update-doc:
    runs-on: ubuntu-latest
    steps:
      - uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Manual Docs Build
          token: ${{ secrets.JINA_DEV_BOT }}
          inputs: '{ "release_token": "${{ env.release_token }}", "triggered_by": "TAG"}'
        env:
          release_token: ${{ secrets.CAS_RELEASE_TOKEN }}

  update-docker:
    needs: update-doc
    runs-on: ubuntu-latest
    steps:
      - name: CAS Docker Build
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Manual CAS Docker Build
          inputs: '{ "release_token": "${{ env.release_token }}", "triggered_by": "TAG"}'
          token: ${{ secrets.JINA_DEV_BOT }}
        env:
          release_token: ${{ secrets.CAS_RELEASE_TOKEN }}
      - name: Helm Executor Build
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Manual Docker Build
          inputs: '{ "release_token": "${{ env.release_token }}", "triggered_by": "TAG"}'
          token: ${{ secrets.JINA_DEV_BOT }}
        env:
          release_token: ${{ secrets.CAS_RELEASE_TOKEN }}
      - name: Hub Executor Build
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Manual Hub Push
          inputs: '{ "release_token": "${{ env.release_token }}", "triggered_by": "TAG"}'
          token: ${{ secrets.JINA_DEV_BOT }}
        env:
          release_token: ${{ secrets.CAS_RELEASE_TOKEN }}

  create-release:
    needs: update-doc
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: 'main'
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - run: |
          python scripts/get-last-release-note.py
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: ðŸ’« Patch ${{ github.ref }}
          body_path: 'tmp.md'
          draft: false
          prerelease: false
