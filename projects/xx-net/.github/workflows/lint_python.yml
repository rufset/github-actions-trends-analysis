name: lint_python
on:
  pull_request:
  push:
    branches: [test]
jobs:
  testing_linux:
    runs-on: ubuntu-latest
    strategy:
       matrix:
         python-version: [ '3.10' ]  # 3.8, 3.9,
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install pytest

      # - run: pip install  reorder-python-imports codespell flake8 isort
      # - if: matrix.python-version >= 3.6
      #  run: |
      #    pip install black
      #    black --check . || true
      # - run: black --diff . || true

#      - run: codespell --quiet-level=2 || true  # --ignore-words-list="" --skip=""
#      - run: flake8 code --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=code/default/gae_proxy/server,code/default/lib/noarch/six.py
      # isort and reorder-python-imports are two ways of doing the same thing
#      - run: isort --recursive . || true
#      - run: reorder-python-imports . || true

      - run: pip install -r requirements.txt || true
      - shell: bash
        env:
          XTUNNEL_USER: ${{ secrets.XTUNNEL_USER }}
          XTUNNEL_PASS: ${{ secrets.XTUNNEL_PASS }}
          PYTHONPATH: ./code/default:./code/default/lib/noarch
        run: |
          pytest -v code/default || true

      - name: Integrate testing
        shell: bash
        env:
          XTUNNEL_USER: ${{ secrets.XTUNNEL_USER }}
          XTUNNEL_PASS: ${{ secrets.XTUNNEL_PASS }}
          PYTHONPATH: ./code/default:./code/default/lib/noarch
        run: |
          python code/default/launcher/tests/integrate_testing.py

  testing_windows:
    runs-on: windows-latest
    strategy:
       matrix:
         python-version: [3.8, '3.10']
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install pytest
      - run: pip install -r requirements.txt || true
      - shell: bash
        env:
          XTUNNEL_USER: ${{ secrets.XTUNNEL_USER }}
          XTUNNEL_PASS: ${{ secrets.XTUNNEL_PASS }}
          PYTHONPATH: ./code/default:./code/default/lib/noarch
        run: |
          pytest -v code/default || true

      - name: Integrate testing
        shell: bash
        env:
          XTUNNEL_USER: ${{ secrets.XTUNNEL_USER }}
          XTUNNEL_PASS: ${{ secrets.XTUNNEL_PASS }}
          PYTHONPATH: ./code/default:./code/default/lib/noarch
        run: |
          python code/default/launcher/tests/integrate_testing.py

  testing_mac:
    runs-on: macos-latest
    strategy:
       matrix:
         python-version: ['3.10']
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install pytest

      - run: pip install -r requirements.txt || true
      - shell: bash
        env:
          XTUNNEL_USER: ${{ secrets.XTUNNEL_USER }}
          XTUNNEL_PASS: ${{ secrets.XTUNNEL_PASS }}
          PYTHONPATH: ./code/default:./code/default/lib/noarch
        run: |
          pytest -v code/default || true

      - name: Integrate testing
        shell: bash
        env:
          XTUNNEL_USER: ${{ secrets.XTUNNEL_USER }}
          XTUNNEL_PASS: ${{ secrets.XTUNNEL_PASS }}
          PYTHONPATH: ./code/default:./code/default/lib/noarch
        run: |
          python code/default/launcher/tests/integrate_testing.py
