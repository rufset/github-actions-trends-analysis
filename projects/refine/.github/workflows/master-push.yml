name: stable Release

on:
  push:
    branches:
      - master

jobs:
  publish:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.ref }}-stable-release
      cancel-in-progress: true
    strategy:
      matrix:
        node-version: [18.x]

    outputs:
      published: ${{ steps.changesets.outputs.published }}
    steps:
      - name: Workflow run cleanup action
        uses: rokroskar/workflow-run-cleanup-action@v0.2.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PANKOD_BOT_TOKEN }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org/
      - name: Creating .npmrc
        run: |
          cat << EOF > "$HOME/.npmrc"
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Install Dependencies & Build
        run: |
          npm ci
          npm run bootstrap:all
          npm run build:all
      - name: Lint
        run: npm run lint:ci
      - name: Test
        run: npm run test:all
      - name: Publint
        run: npm run publint:all
      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          version: npm run changeset version
          publish: npm run changeset publish
          commit: "ci(changesets): version packages"
          title: "ci(changesets): version packages"
        env:
          GITHUB_TOKEN: ${{ secrets.PANKOD_BOT_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
  documentation-live-preview:
    needs: publish
    if: ${{ needs.publish.outputs.published == 'true' || contains(github.event.head_commit.message, 'deploy_preview_pls') }}
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.ref }}-next-documentation-live-preview
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
      - name: live previews docker build
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ghcr.io
          repository: refinedev/refine/refine-live-preview
          dockerfile: packages/live-previews/Dockerfile
          tag_with_sha: true
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - name: AWS EKS kubeconfig
        run: |
          aws eks --region eu-west-1 update-kubeconfig --name refine
      - name: Deploy refine-live-previews-documentation to k8s
        run: |
          cd packages/live-previews
          mv ./k8s/live-previews/Chart.yaml ./k8s/live-previews/Chart.old.yaml &&
          cat ./k8s/live-previews/Chart.old.yaml | grep -v appVersion > ./k8s/live-previews/Chart.yaml &&
          echo -e "\r\nappVersion: sha-${GITHUB_SHA::7}\r\n" >> ./k8s/live-previews/Chart.yaml &&
          cat ./k8s/live-previews/Chart.yaml
          helm upgrade refine-next-live-previews-documentation ./k8s/live-previews --install --atomic --timeout 20m0s --values=./k8s/live-previews/values.yaml \
            --set replicaCount=3 \
            --set ingress.enabled=true \
            --set ingress.annotations."kubernetes\.io/ingress\.class"=nginx \
            --set ingress.annotations."cert-manager\.io/issuer"=letsencrypt-prod \
            --set ingress.hosts[0].host=${{ env.domain }} \
            --set ingress.hosts[0].paths[0].path="/" \
            --set ingress.hosts[0].paths[0].pathType=ImplementationSpecific \
            --set ingress.tls[0].secretName=${{ env.domain }} \
            --set ingress.tls[0].hosts[0]=${{ env.domain }} \
        env:
          domain: "next.live-previews.refine.dev"
  documentation-gh:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.ref }}-stable-documentation
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
      - name: Add key to allow access to repository
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          echo "${{ secrets.GH_PAGES_DEPLOY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          cat <<EOT >> ~/.ssh/config
          Host github.com
          HostName github.com
          IdentityFile ~/.ssh/id_rsa
          EOT
      - name: Build packages
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
        run: |
          npm ci
          npm run bootstrap:all
          npm run build:all
          cd documentation
          npm ci
      - name: Release to GitHub Pages
        env:
          USE_SSH: true
          GIT_USER: pankod-bot
          NODE_ENV: production
          NODE_OPTIONS: "--max_old_space_size=4096"
        run: |
          cd documentation
          git config --global user.email "bot@pankod.com"
          git config --global user.name "pankod-bot"
          LIVE_PREVIEW_URL=https://next.live-previews.refine.dev/preview npm run deploy
